---
- ansible.builtin.debug: msg="START cli/cli_macro.yaml on connection={{ ansible_connection }}"

- name: Check for macro support
  register: supports_macro
  ignore_errors: true
  cisco.ios.ios_command:
    commands:
      - show parser macro brief

- name: Ios_config macro integration tests
  when: supports_macro is succeeded
  block:
    - name: Define macro name
      ansible.builtin.set_fact:
        macro_name: MACRO_ANSIBLE_TEST

    - name: Setup - remove configuration
      cisco.ios.ios_config:
        lines:
          - no macro name {{ macro_name }}
          - do show clock
        match: none

    - name: Configure macro
      register: result
      cisco.ios.ios_config:
        parents: macro name {{ macro_name }}
        multiline_delimiter: "@"
        after: "@"
        match: line
        replace: block
        lines: "{{ lookup('template', 'basic/macro.j2') }}"

    - name: Check if macro has been added
      ansible.builtin.assert:
        that:
          - result.changed == true

    - name: Configure macro again - idempotent check
      register: result
      cisco.ios.ios_config:
        parents: macro name {{ macro_name }}
        multiline_delimiter: "@"
        after: "@"
        match: line
        replace: block
        lines: "{{ lookup('template', 'basic/macro.j2') }}"

    - name: Macro already/correctly configured ?
      ansible.builtin.assert:
        that:
          - result.changed == false
  always:
    - name: Teardown
      cisco.ios.ios_config:
        lines:
          - no macro name {{ macro_name }}
          - do show clock
        match: none

- ansible.builtin.debug: msg="END cli/cli_macro.yaml on connection={{ ansible_connection }}"

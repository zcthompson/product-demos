---
- name: "Get current Projects from the API"
  ansible.builtin.set_fact:
    projects_lookvar: "{{ query(controller_api_plugin, 'api/v2/projects/',
                                query_params={'order_by': 'organization,id'},
                                host=controller_hostname, oauth_token=controller_oauthtoken, verify_ssl=controller_validate_certs,
                                return_all=true, max_objects=query_controller_api_max_objects)
                       }}"
  no_log: "{{ controller_configuration_filetree_create_secure_logging }}"

- name: "Create the <ORGANIZATION_NAME>/projects output directory for projects in {{ output_path }}"
  ansible.builtin.file:
    path: "{{ __path }}"
    state: directory
    mode: '0755'
  vars:
    __path: "{{ output_path }}/{{ needed_path | regex_replace('/', '_') }}/projects"
  loop: "{{ (projects_lookvar | map(attribute='summary_fields') | selectattr('organization', 'defined') | map(attribute='organization') | map(attribute='name') | list | flatten | unique)
            + (['ORGANIZATIONLESS'] if ((projects_lookvar | map(attribute='summary_fields') | selectattr('organization', 'undefined') | list | flatten) | length > 0) else [])
         }}"
  loop_control:
    loop_var: needed_path
    label: "{{ __path }}"

- name: "Add current projects to the <ORGANIZATION_NAME>/projects output file in {{ output_path }}"
  ansible.builtin.template:
    src: "templates/current_projects.j2"
    dest: "{{ __dest }}"
    mode: '0644'
  vars:
    project_organization: "{{ current_projects_asset_value.summary_fields.organization.name | default('ORGANIZATIONLESS', true) }}"
    project_id: "{{ current_projects_asset_value.id }}"
    project_name: "{{ current_projects_asset_value.name | regex_replace('/', '_') }}"
    __dest: "{{ output_path }}/{{ project_organization | regex_replace('/', '_') }}/projects/{{ project_id }}_{{ project_name | regex_replace('/', '_') }}.yaml"
    query_notification_error: "{{ query(controller_api_plugin, current_projects_asset_value.related.notification_templates_error,
                     host=controller_hostname, oauth_token=controller_oauthtoken, verify_ssl=controller_validate_certs,
                     return_all=true, max_objects=query_controller_api_max_objects) }}"
    query_notification_started: "{{ query(controller_api_plugin, current_projects_asset_value.related.notification_templates_started,
                     host=controller_hostname, oauth_token=controller_oauthtoken, verify_ssl=controller_validate_certs,
                     return_all=true, max_objects=query_controller_api_max_objects) }}"
    query_notification_success: "{{ query(controller_api_plugin, current_projects_asset_value.related.notification_templates_success,
                     host=controller_hostname, oauth_token=controller_oauthtoken, verify_ssl=controller_validate_certs,
                     return_all=true, max_objects=query_controller_api_max_objects) }}"
  loop: "{{ projects_lookvar }}"
  loop_control:
    loop_var: current_projects_asset_value
    label: "{{ __dest }}"
  no_log: "{{ controller_configuration_filetree_create_secure_logging }}"
...

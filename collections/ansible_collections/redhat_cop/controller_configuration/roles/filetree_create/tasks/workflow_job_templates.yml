---
- name: "Get current Workflow Job Templates from the API"
  ansible.builtin.set_fact:
    workflow_job_templates_lookvar: "{{ query(controller_api_plugin, 'api/v2/workflow_job_templates/',
                                              query_params={'order_by': 'organization,id'},
                                              host=controller_hostname, oauth_token=controller_oauthtoken, verify_ssl=controller_validate_certs,
                                              return_all=true, max_objects=query_controller_api_max_objects)
                                     }}"
  no_log: "{{ controller_configuration_filetree_create_secure_logging }}"

- name: "Create the <ORGANIZATION_NAME>/workflow_job_templates output directory for workflow job templates in {{ output_path }}"
  ansible.builtin.file:
    path: "{{ __path }}"
    state: directory
    mode: '0755'
  vars:
    __path: "{{ output_path }}/{{ needed_path | regex_replace('/', '_') }}/workflow_job_templates/"
  loop: "{{ (workflow_job_templates_lookvar | map(attribute='summary_fields') | selectattr('organization', 'defined') | map(attribute='organization') | map(attribute='name') | list | flatten | unique)
            + (['ORGANIZATIONLESS'] if ((workflow_job_templates_lookvar | map(attribute='summary_fields') | selectattr('organization', 'undefined') | list | flatten) | length > 0) else [])
         }}"
  loop_control:
    loop_var: needed_path
    label: "{{ __path }}"

- name: "Add current workflow job templates to the <ORGANIZATION_NAME>/workflow_job_templates output file in {{ output_path }}"
  ansible.builtin.template:
    src: "templates/current_workflow_job_templates.j2"
    dest: "{{ __dest }}"
    mode: '0644'
  vars:
    workflow_job_template_organization: "{{ current_workflow_job_templates_asset_value.summary_fields.organization.name | default('ORGANIZATIONLESS') }}"
    workflow_job_template_id: "{{ current_workflow_job_templates_asset_value.id }}"
    workflow_job_template_name: "{{ current_workflow_job_templates_asset_value.name | regex_replace('/', '_') }}"
    __dest: "{{ output_path }}/{{ workflow_job_template_organization | regex_replace('/', '_') }}/workflow_job_templates/{{ workflow_job_template_id }}_{{ workflow_job_template_name | regex_replace('/', '_') }}.yaml"
    query_labels: "{{ query(controller_api_plugin, current_workflow_job_templates_asset_value.related.labels,
                     host=controller_hostname, oauth_token=controller_oauthtoken, verify_ssl=controller_validate_certs,
                     return_all=true, max_objects=query_controller_api_max_objects) }}"
    query_notification_error: "{{ query(controller_api_plugin, current_workflow_job_templates_asset_value.related.notification_templates_error,
                     host=controller_hostname, oauth_token=controller_oauthtoken, verify_ssl=controller_validate_certs,
                     return_all=true, max_objects=query_controller_api_max_objects) }}"
    query_notification_started: "{{ query(controller_api_plugin, current_workflow_job_templates_asset_value.related.notification_templates_started,
                     host=controller_hostname, oauth_token=controller_oauthtoken, verify_ssl=controller_validate_certs,
                     return_all=true, max_objects=query_controller_api_max_objects) }}"
    query_notification_success: "{{ query(controller_api_plugin, current_workflow_job_templates_asset_value.related.notification_templates_success,
                     host=controller_hostname, oauth_token=controller_oauthtoken, verify_ssl=controller_validate_certs,
                     return_all=true, max_objects=query_controller_api_max_objects) }}"
    query_notification_approvals: "{{ query(controller_api_plugin, current_workflow_job_templates_asset_value.related.notification_templates_approvals,
                     host=controller_hostname, oauth_token=controller_oauthtoken, verify_ssl=controller_validate_certs,
                     return_all=true, max_objects=query_controller_api_max_objects) }}"
  loop: "{{ workflow_job_templates_lookvar }}"
  loop_control:
    loop_var: current_workflow_job_templates_asset_value
    label: "{{ __dest }}"
  no_log: "{{ controller_configuration_filetree_create_secure_logging }}"
...

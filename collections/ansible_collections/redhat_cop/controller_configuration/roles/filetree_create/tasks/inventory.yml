---
- name: "Get the inventories from the API"
  ansible.builtin.set_fact:
    inventory_lookvar: "{{ query(controller_api_plugin, 'api/v2/inventories/',
                                 query_params={'not__kind': 'smart', 'order_by': 'organization,id'},
                                 host=controller_hostname, oauth_token=controller_oauthtoken, verify_ssl=controller_validate_certs,
                                 return_all=true, max_objects=query_controller_api_max_objects)
                        }}"
  no_log: "{{ controller_configuration_filetree_create_secure_logging }}"

- name: "Create the <ORGANIZATION_NAME>/inventories output directory for inventories in {{ output_path }}"
  ansible.builtin.file:
    path: "{{ __path }}"
    state: directory
    mode: '0755'
  vars:
    inventory_organization: "{{ needed_path.summary_fields.organization.name | default('ORGANIZATIONLESS') }}"
    inventory_name: "{{ needed_path.name | regex_replace('/', '_') }}"
    __path: "{{ output_path }}/{{ inventory_organization | regex_replace('/', '_') }}/inventories/{{ inventory_name | regex_replace('/', '_') }}"
  loop: "{{ inventory_lookvar }}"
  loop_control:
    loop_var: needed_path
    label: "{{ __path }}"

- name: "Add current inventories to the <ORGANIZATION_NAME>/inventories output yaml file in {{ output_path }}"
  ansible.builtin.template:
    src: "templates/current_inventories.j2"
    dest: "{{ __dest }}"
    mode: '0644'
  vars:
    inventory_organization: "{{ current_inventories_asset_value.summary_fields.organization.name | default('ORGANIZATIONLESS') }}"
    inventory_name: "{{ current_inventories_asset_value.name | regex_replace('/', '_') }}"
    __dest: "{{ output_path }}/{{ inventory_organization | regex_replace('/', '_') }}/inventories/{{ inventory_name | regex_replace('/', '_') }}/{{ current_inventories_asset_value.id }}_{{ inventory_name | regex_replace('/', '_') }}.yaml"
  loop: "{{ inventory_lookvar }}"
  loop_control:
    loop_var: current_inventories_asset_value
    label: "{{ __dest }}"

- name: "Set the inventory's inventory sources"
  ansible.builtin.include_tasks: "inventory_sources.yml"
  vars:
    inventory_organization: "{{ current_inventory_sources.summary_fields.organization.name | default('ORGANIZATIONLESS') }}"
    inventory_name: "{{ current_inventory_sources.name | regex_replace('/', '_') }}"
    inventory_sources_output_path: "{{ output_path }}/{{ inventory_organization | regex_replace('/', '_') }}/inventories/{{ inventory_name | regex_replace('/', '_') }}"
    current_inventory_sources_asset_value: "{{ query(controller_api_plugin, current_inventory_sources.related.inventory_sources,
                                                          host=controller_hostname, oauth_token=controller_oauthtoken, verify_ssl=controller_validate_certs,
                                                          return_all=true, max_objects=query_controller_api_max_objects)
                                                    if current_inventory_sources.has_inventory_sources else []
                                            }}"
  loop: "{{ inventory_lookvar }}"
  loop_control:
    loop_var: current_inventory_sources
    label: "{{ inventory_sources_output_path }}"
  no_log: "{{ controller_configuration_filetree_create_secure_logging }}"

- name: "Set the inventory's hosts"
  ansible.builtin.include_tasks: "hosts.yml"
  vars:
    inventory_organization: "{{ current_inventory_hosts.summary_fields.organization.name | default('ORGANIZATIONLESS') }}"
    inventory_name: "{{ current_inventory_hosts.name | regex_replace('/', '_') }}"
    hosts_output_path: "{{ output_path }}/{{ inventory_organization | regex_replace('/', '_') }}/inventories/{{ inventory_name | regex_replace('/', '_') }}"
    current_hosts_asset_value: "{{ query(controller_api_plugin, current_inventory_hosts.related.hosts,
                                              host=controller_hostname, oauth_token=controller_oauthtoken, verify_ssl=controller_validate_certs,
                                              return_all=true, max_objects=query_controller_api_max_objects)
                                        if not current_inventory_hosts.has_inventory_sources else []
                                }}"
  loop: "{{ inventory_lookvar }}"
  loop_control:
    loop_var: current_inventory_hosts
    label: "{{ hosts_output_path }}"
  no_log: "{{ controller_configuration_filetree_create_secure_logging }}"

- name: "Set the inventory's groups"
  ansible.builtin.include_tasks: "groups.yml"
  vars:
    inventory_organization: "{{ current_inventory_groups.summary_fields.organization.name | default('ORGANIZATIONLESS') }}"
    inventory_name: "{{ current_inventory_groups.name | regex_replace('/', '_') }}"
    groups_output_path: "{{ output_path }}/{{ inventory_organization | regex_replace('/', '_') }}/inventories/{{ inventory_name | regex_replace('/', '_') }}"
    current_groups_asset_value: "{{ query(controller_api_plugin, current_inventory_groups.related.groups,
                                               host=controller_hostname, oauth_token=controller_oauthtoken, verify_ssl=controller_validate_certs,
                                               return_all=true, max_objects=query_controller_api_max_objects)
                                         if not current_inventory_groups.has_inventory_sources else []
                                 }}"
  loop: "{{ inventory_lookvar }}"
  loop_control:
    loop_var: current_inventory_groups
    label: "{{ groups_output_path }}"
  no_log: "{{ controller_configuration_filetree_create_secure_logging }}"
...

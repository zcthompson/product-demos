---
- name: "Get list of files inside {{ filetree_controller_hosts }}"
  ansible.builtin.find:
    paths: "{{ filetree_controller_hosts }}"
    file_type: file
    recurse: true
  register: __list_files_controller_hosts

- name: "Read Hosts definitions"
  ansible.builtin.include_vars:
    file: "{{ __read_hosts_definitions_item.path }}"
  loop: "{{ __list_files_controller_hosts.files }}"
  loop_control:
    loop_var: __read_hosts_definitions_item
  register: __contents_filetree_controller_hosts

- name: "Populate Hosts list"
  ansible.builtin.set_fact:
    __populate_controller_hosts: "{{ (__populate_controller_hosts | default([])) + __populate_hosts_list_item.ansible_facts.controller_hosts }}"
  loop: "{{ __contents_filetree_controller_hosts.results }}"
  loop_control:
    loop_var: __populate_hosts_list_item
  when: __contents_filetree_controller_hosts.results is defined and __populate_hosts_list_item.ansible_facts.controller_hosts is defined

- name: "Segregated Hosts list when controller_location is defined"
  when: controller_location is defined and __populate_controller_hosts is defined
  block:
    - name: "Populate Hosts list by _common objects"
      ansible.builtin.set_fact:
        __populate_controller_hosts_common: "{{ (__populate_controller_hosts_common | default([])) + [__populate_hosts_list_common_item] }}"
      loop: "{{ __populate_controller_hosts }}"
      loop_control:
        loop_var: __populate_hosts_list_common_item
      when: "__populate_hosts_list_common_item.controller_location is not defined"

    - name: "Populate Hosts list by __site objects"
      ansible.builtin.set_fact:
        __populate_controller_hosts_site: "{{ (__populate_controller_hosts_site | default([])) + [__populate_hosts_list_site_item] }}"
      loop: "{{ __populate_controller_hosts }}"
      loop_control:
        loop_var: __populate_hosts_list_site_item
      when: "__populate_hosts_list_site_item.controller_location is defined and __populate_hosts_list_site_item.controller_location == controller_location"

    - name: "Concatenate Hosts list common + site"
      ansible.builtin.set_fact:
        __populate_controller_hosts_total: "{{ __populate_controller_hosts_common | default([]) + __populate_controller_hosts_site }}"
      when: __populate_controller_hosts_site is defined

    - name: "Set Hosts Data Structure common + site concatenated"
      ansible.builtin.set_fact:
        __populate_controller_hosts: "{{ __populate_controller_hosts_total }}"
      when: __populate_controller_hosts_total is defined

- name: "Set Hosts Data Structure"
  ansible.builtin.set_fact:
    controller_hosts: "{{ __populate_controller_hosts }}"
  when: __populate_controller_hosts is defined
...
